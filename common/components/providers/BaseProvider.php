<?php


namespace common\components\providers;


use common\components\repositories\BaseDataRepository;
use common\components\services\BaseDataService;
use common\constants\BaseConstant;
use yii\base\Component;
use yii\base\Exception;

class BaseProvider extends Component
{
    /**
     * @var string
     */
    public string $type; // 'redis' or 'db' or 'none'

    /**
     * @var array
     */
    public array $config = [
        BaseConstant::METHOD_DB => [],
        BaseConstant::METHOD_ELASTICSEARCH => [],
        BaseConstant::METHOD_API => ['domain' => '', 'appKey' => ''],
    ];

    /**
     * @var  BaseDataService | BaseDataRepository $component
     */
    public $component = false;

    /**
     * @throws Exception
     */
    public function init()
    {
        if (empty($this->type))
            throw new Exception('Type not found. Please provide array of type to get data.');

        if ($this->component === false)
            throw new Exception('Class not found with type "' . $this->type . '"');

        parent::init(); // TODO: Change the autogenerated stub
    }

    public function functionExist($func_name): bool
    {
        return is_callable([$this->component, $func_name]);
    }

    public function callFunction($func_name, $params = []) {
        return $this->functionExist($func_name) ? call_user_func_array(array($this->component, $func_name), $params) : false;
    }
}